/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchListRouteImport } from './routes/watchList'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DetailsMovieIdRouteImport } from './routes/details.$movieId'

const WatchListRoute = WatchListRouteImport.update({
  id: '/watchList',
  path: '/watchList',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DetailsMovieIdRoute = DetailsMovieIdRouteImport.update({
  id: '/details/$movieId',
  path: '/details/$movieId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/watchList': typeof WatchListRoute
  '/details/$movieId': typeof DetailsMovieIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/watchList': typeof WatchListRoute
  '/details/$movieId': typeof DetailsMovieIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/watchList': typeof WatchListRoute
  '/details/$movieId': typeof DetailsMovieIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/watchList' | '/details/$movieId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/watchList' | '/details/$movieId'
  id: '__root__' | '/' | '/watchList' | '/details/$movieId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WatchListRoute: typeof WatchListRoute
  DetailsMovieIdRoute: typeof DetailsMovieIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchList': {
      id: '/watchList'
      path: '/watchList'
      fullPath: '/watchList'
      preLoaderRoute: typeof WatchListRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/details/$movieId': {
      id: '/details/$movieId'
      path: '/details/$movieId'
      fullPath: '/details/$movieId'
      preLoaderRoute: typeof DetailsMovieIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WatchListRoute: WatchListRoute,
  DetailsMovieIdRoute: DetailsMovieIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
